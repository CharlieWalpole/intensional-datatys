Build profile: -w ghc-8.6.5 -O1
In order, the following will be built (use -v for more details):
 - intensional-constraints-0.1.0.0 (lib) (file src/Constraint.hs changed)
 - intensional-constraints-0.1.0.0 (test:intensional-constraints-test) (dependency rebuilt)
Preprocessing library for intensional-constraints-0.1.0.0..
Building library for intensional-constraints-0.1.0.0..
[2 of 6] Compiling Constraint       ( src/Constraint.hs, /home/eddie/Documents/Intensional Constriants/prototype/dist-newstyle/build/x86_64-linux/ghc-8.6.5/intensional-constraints-0.1.0.0/build/Constraint.o )

src/Constraint.hs:65:12: warning: [-Wunused-matches]
    Defined but not used: ‘d’
   |
65 |   ppr (Con d k)         = O.ppr k
   |            ^

src/Constraint.hs:66:12: warning: [-Wunused-matches]
    Defined but not used: ‘d’
   |
66 |   ppr (Sum d ks)        = O.char 'Σ' O.<> O.brackets (O.pprWithBars id (O.ppr <$> ks))
   |            ^

src/Constraint.hs:80:1: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘sort’: Patterns not matched: Dot
   |
80 | sort (Base b)     = SBase b
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^...

src/Constraint.hs:101:14: warning: [-Wunused-matches]
    Defined but not used: ‘d’
    |
101 | stems (Inj i d)   = [i]
    |              ^

src/Constraint.hs:114:3: warning: [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In an equation for ‘ppr’: Patterns not matched: _
    |
114 |   ppr (Forall as cg t) = O.hang header 3 (O.hang (O.keyword $ O.text "where") 3 body)
    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

src/Constraint.hs:145:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘maybeSubGuard’
    |
145 | maybeSubGuard (SubEnv x y) (Just g)
    | ^^^^^^^^^^^^^

src/Constraint.hs:152:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘subEnvVarGuard’
    |
152 | subEnvVarGuard x y = fmap go
    | ^^^^^^^^^^^^^^

src/Constraint.hs:160:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘subConDom’
    |
160 | subConDom k x d = mapMaybe go
    | ^^^^^^^^^

src/Constraint.hs:176:13: warning: [-Wname-shadowing]
    This binding for ‘g’ shadows the existing binding
      bound at src/Constraint.hs:170:13
    |
176 |     subsume g g' = all (`elem` g') g
    |             ^

src/Constraint.hs:176:15: warning: [-Wname-shadowing]
    This binding for ‘g'’ shadows the existing binding
      bound at src/Constraint.hs:170:16
    |
176 |     subsume g g' = all (`elem` g') g
    |               ^^

src/Constraint.hs:241:27: warning: [-Wunused-matches]
    Defined but not used: ‘e’
    |
241 | simplify Con{} (Sum _ []) e    = error "Unsatisfiable!" -- Throw e related error
    |                           ^

src/Constraint.hs:315:12: warning: [-Wunused-matches]
    Defined but not used: ‘cg’
    |
315 | transitive cg | Core.pprTrace "transitive" (Core.ppr ()) False = undefined
    |            ^^

src/Constraint.hs:321:1: warning: [-Wmissing-signatures]
    Top-level binding with no type signature:
      transitive' :: ConGraph -> ConGraph
    |
321 | transitive' cg = trace "fold go" $  cg{cons = M.foldlWithKey go (cons cg) (cons cg)}
    | ^^^^^^^^^^^

src/Constraint.hs:324:8: warning: [-Wname-shadowing]
    This binding for ‘cons’ shadows the existing binding
      defined at src/Constraint.hs:190:3
    |
324 |     go cons c g = Core.pprTrace "go" (Core.ppr c) $ M.foldlWithKey (go' c g) cons cons
    |        ^^^^

src/Constraint.hs:350:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘resGuard’
    |
350 | resGuard cg
    | ^^^^^^^^

src/Constraint.hs:355:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘resGuard'’
    |
355 | resGuard' cg = cg{cons = M.foldlWithKey go (cons cg) (cons cg)}
    | ^^^^^^^^^

src/Constraint.hs:358:8: warning: [-Wname-shadowing]
    This binding for ‘cons’ shadows the existing binding
      defined at src/Constraint.hs:190:3
    |
358 |     go cons c g = M.foldlWithKey (go' c g) cons cons
    |        ^^^^

src/Constraint.hs:362:11: warning: [-Wunused-matches]
    Defined but not used: ‘g’
    |
362 |     go' c g cons' c' g' = mergeInsertMany cons' g'' c'
    |           ^
Preprocessing test suite 'intensional-constraints-test' for intensional-constraints-0.1.0.0..
Building test suite 'intensional-constraints-test' for intensional-constraints-0.1.0.0..
[1 of 2] Compiling Paths_intensional_constraints ( /home/eddie/Documents/Intensional Constriants/prototype/dist-newstyle/build/x86_64-linux/ghc-8.6.5/intensional-constraints-0.1.0.0/t/intensional-constraints-test/build/intensional-constraints-test/autogen/Paths_intensional_constraints.hs, /home/eddie/Documents/Intensional Constriants/prototype/dist-newstyle/build/x86_64-linux/ghc-8.6.5/intensional-constraints-0.1.0.0/t/intensional-constraints-test/build/intensional-constraints-test/intensional-constraints-test-tmp/Paths_intensional_constraints.o ) [Plugin forced recompilation]
quant
quant ()
trans
transitive ()
eq
fold go
go 12<3
go 11<6
go 10<1
go 9<4
go 7<12
go 5<10
go 2<11
go 0<9
other
fold go
eq
fold go
go 12<3
go 11<6
go 10<1
go 9<4
go 7<12
go 5<10
go 2<11
go 0<9
go 12<3
go 11<6
go 10<1
go 9<4
go 7<12
go 7<3
go 5<10
go 5<1
go 2<11
go 2<6
go 0<9
go 0<4
quant
trans
eq
fold go
go []<37[]
go []<36[]
go :<33[]
go :<28[]
go :<23[]
go :<18[]
go 37<15
go 36<32
go 35<34
go 33<27
go 32<33
go 31<33
go 30<29
go 28<22
go 27<28
go 26<28
go 25<24
go 23<17
go 22<23
go 21<23
go 20<19
go 18<14
go 17<18
go 16<18
other
fold go
eq
fold go
go []<37[]
go []<36[]
go :<33[]
go :<28[]
go :<23[]
go :<18[]
go 37<15
go 36<32
go 35<34
go 33<27
go 32<33
go 31<33
go 30<29
go 28<22
go 27<28
go 26<28
go 25<24
go 23<17
go 22<23
go 21<23
go 20<19
go 18<14
go 17<18
go 16<18
go []<37[]
go []<36[]
go []<33[]
go []<32[]
go []<28[]
go []<27[]
go []<22[]
go []<15[]
go :<33[]
go :<28[]
go :<27[]
go :<23[]
go :<22[]
go :<18[]
go :<17[]
go :<14[]
go 37<15
go 36<33
go 36<32
go 36<28
go 36<27
go 36<22
go 35<34
go 33<28
go 33<27
go 33<23
go 33<22
go 33<17
go 32<33
go 32<28
go 32<27
go 32<22
go 31<33
go 31<28
go 31<27
go 31<22
go 30<29
go 28<23
go 28<22
go 28<18
go 28<17
go 28<14
go 27<28
go 27<23
go 27<22
go 27<17
go 26<28
go 26<23
go 26<22
go 26<17
go 25<24
go 23<18
go 23<17
go 23<14
go 22<23
go 22<18
go 22<17
go 22<14
go 21<23
go 21<18
go 21<17
go 21<14
go 20<19
go 18<14
go 17<18
go 17<14
go 16<18
go 16<14
other
fold go
eq
fold go
go []<37[]
go []<36[]
go []<33[]
go []<32[]
go []<28[]
go []<27[]
go []<22[]
go []<15[]
go :<33[]
go :<28[]
go :<27[]
go :<23[]
go :<22[]
go :<18[]
go :<17[]
go :<14[]
go 37<15
go 36<33
go 36<32
go 36<28
go 36<27
go 36<22
go 35<34
go 33<28
go 33<27
go 33<23
go 33<22
go 33<17
go 32<33
go 32<28
go 32<27
go 32<22
go 31<33
go 31<28
go 31<27
go 31<22
go 30<29
go 28<23
go 28<22
go 28<18
go 28<17
go 28<14
go 27<28
go 27<23
go 27<22
go 27<17
go 26<28
go 26<23
go 26<22
go 26<17
go 25<24
go 23<18
go 23<17
go 23<14
go 22<23
go 22<18
go 22<17
go 22<14
go 21<23
go 21<18
go 21<17
go 21<14
go 20<19
go 18<14
go 17<18
go 17<14
go 16<18
go 16<14
go []<37[]
go []<36[]
go []<33[]
go []<32[]
go []<28[]
go []<27[]
go []<23[]
go []<22[]
go []<18[]
go []<17[]
go []<15[]
go []<14[]
go :<33[]
go :<28[]
go :<27[]
go :<23[]
go :<22[]
go :<18[]
go :<17[]
go :<14[]
go 37<15
go 36<33
go 36<32
go 36<28
go 36<27
go 36<23
go 36<22
go 36<18
go 36<17
go 36<14
go 35<34
go 33<28
go 33<27
go 33<23
go 33<22
go 33<18
go 33<17
go 33<14
go 32<33
go 32<28
go 32<27
go 32<23
go 32<22
go 32<18
go 32<17
go 32<14
go 31<33
go 31<28
go 31<27
go 31<23
go 31<22
go 31<18
go 31<17
go 31<14
go 30<29
go 28<23
go 28<22
go 28<18
go 28<17
go 28<14
go 27<28
go 27<23
go 27<22
go 27<18
go 27<17
go 27<14
go 26<28
go 26<23
go 26<22
go 26<18
go 26<17
go 26<14
go 25<24
go 23<18
go 23<17
go 23<14
go 22<23
go 22<18
go 22<17
go 22<14
go 21<23
go 21<18
go 21<17
go 21<14
go 20<19
go 18<14
go 17<18
go 17<14
go 16<18
go 16<14
quant
trans
eq
fold go
go 43<41
go 42<38
go 41<39
go 40<42
other
fold go
eq
fold go
go 43<41
go 42<38
go 41<39
go 40<42
go 43<41
go 43<39
go 42<38
go 41<39
go 40<42
go 40<38
quant
trans
eq
fold go
go 49<47
go 48<44
go 47<45
go 46<48
other
fold go
eq
fold go
go 49<47
go 48<44
go 47<45
go 46<48
go 49<47
go 49<45
go 48<44
go 47<45
go 46<48
go 46<44
quant
trans
eq
fold go
go 55<53
go 54<50
go 53<51
go 52<54
other
fold go
eq
fold go
go 55<53
go 54<50
go 53<51
go 52<54
go 55<53
go 55<51
go 54<50
go 53<51
go 52<54
go 52<50
quant
trans
eq
fold go
go 61<59
go 60<56
go 59<57
go 58<60
other
fold go
eq
fold go
go 61<59
go 60<56
go 59<57
go 58<60
go 61<59
go 61<57
go 60<56
go 59<57
go 58<60
go 58<56
quant
trans
eq
fold go
go 67<65
go 66<62
go 65<63
go 64<66
other
fold go
eq
fold go
go 67<65
go 66<62
go 65<63
go 64<66
go 67<65
go 67<63
go 66<62
go 65<63
go 64<66
go 64<62
quant
trans
eq
fold go
go 73<71
go 72<68
go 71<69
go 70<72
other
fold go
eq
fold go
go 73<71
go 72<68
go 71<69
go 70<72
go 73<71
go 73<69
go 72<68
go 71<69
go 70<72
go 70<68
quant
trans
eq
fold go
go TrNameS<81TrName
go TrNameS<78TrName
go 82<80
go 81<76
go 80<81
go 79<77
go 78<75
go 77<78
other
fold go
eq
fold go
go TrNameS<81TrName
go TrNameS<78TrName
go 82<80
go 81<76
go 80<81
go 79<77
go 78<75
go 77<78
go TrNameS<81TrName
go TrNameS<78TrName
go TrNameS<76TrName
go TrNameS<75TrName
go 82<81
go 82<80
go 82<76
go 81<76
go 80<81
go 80<76
go 79<78
go 79<77
go 79<75
go 78<75
go 77<78
go 77<75
quant
trans
eq
fold go
go 124<116
go 123<121
go 123<119
go 122<118
go 121<119
go 120<122
go 120<118
go 118<124
go 117<100
go 116<112
go 113<117
go 110<108
go 109<104
go 108<106
go 107<109
go 105<98
go 104<102
go 103<105
go 101<83
go 100<2
go 99<111
go 98<0
go 97<89
go 96<92
go 95<87
go 94<90
go 93<97
go 93<89
go 91<95
go 91<87
go 88<96
go 88<92
go 86<94
go 86<90
go 3<101
go 1<99
other
fold go
eq
fold go
go 124<116
go 123<121
go 123<119
go 122<118
go 121<119
go 120<122
go 120<118
go 118<124
go 117<100
go 116<112
go 113<117
go 110<108
go 109<104
go 108<106
go 107<109
go 105<98
go 104<102
go 103<105
go 101<83
go 100<2
go 99<111
go 98<0
go 97<89
go 96<92
go 95<87
go 94<90
go 93<97
go 93<89
go 91<95
go 91<87
go 88<96
go 88<92
go 86<94
go 86<90
go 3<101
go 1<99
go 124<116
go 124<112
go 123<121
go 123<119
go 122<124
go 122<118
go 122<116
go 122<112
go 121<119
go 120<124
go 120<122
go 120<118
go 120<116
go 120<112
go 118<124
go 118<116
go 118<112
go 117<100
go 117<2
go 116<112
go 113<117
go 113<100
go 113<2
go 110<108
go 110<106
go 109<104
go 109<102
go 108<106
go 107<109
go 107<104
go 107<102
go 105<98
go 105<0
go 104<102
go 103<105
go 103<98
go 103<0
go 101<83
go 100<2
go 99<111
go 98<0
go 97<89
go 96<92
go 95<87
go 94<90
go 93<97
go 93<89
go 91<95
go 91<87
go 88<96
go 88<92
go 86<94
go 86<90
go 3<101
go 3<83
go 1<111
go 1<99
quant
trans
eq
fold go
go 166<158
go 165<163
go 165<161
go 164<160
go 163<161
go 162<164
go 162<160
go 160<166
go 159<142
go 158<154
go 155<159
go 152<150
go 151<146
go 150<148
go 149<151
go 147<140
go 146<144
go 145<147
go 143<125
go 142<2
go 141<153
go 140<0
go 139<131
go 138<134
go 137<129
go 136<132
go 135<139
go 135<131
go 133<137
go 133<129
go 130<138
go 130<134
go 128<136
go 128<132
go 3<143
go 1<141
other
fold go
eq
fold go
go 166<158
go 165<163
go 165<161
go 164<160
go 163<161
go 162<164
go 162<160
go 160<166
go 159<142
go 158<154
go 155<159
go 152<150
go 151<146
go 150<148
go 149<151
go 147<140
go 146<144
go 145<147
go 143<125
go 142<2
go 141<153
go 140<0
go 139<131
go 138<134
go 137<129
go 136<132
go 135<139
go 135<131
go 133<137
go 133<129
go 130<138
go 130<134
go 128<136
go 128<132
go 3<143
go 1<141
go 166<158
go 166<154
go 165<163
go 165<161
go 164<166
go 164<160
go 164<158
go 164<154
go 163<161
go 162<166
go 162<164
go 162<160
go 162<158
go 162<154
go 160<166
go 160<158
go 160<154
go 159<142
go 159<2
go 158<154
go 155<159
go 155<142
go 155<2
go 152<150
go 152<148
go 151<146
go 151<144
go 150<148
go 149<151
go 149<146
go 149<144
go 147<140
go 147<0
go 146<144
go 145<147
go 145<140
go 145<0
go 143<125
go 142<2
go 141<153
go 140<0
go 139<131
go 138<134
go 137<129
go 136<132
go 135<139
go 135<131
go 133<137
go 133<129
go 130<138
go 130<134
go 128<136
go 128<132
go 3<143
go 3<125
go 1<153
go 1<141
quant
trans
eq
fold go
go 208<200
go 207<205
go 207<203
go 206<202
go 205<203
go 204<206
go 204<202
go 202<208
go 201<184
go 200<196
go 197<201
go 194<192
go 193<188
go 192<190
go 191<193
go 189<182
go 188<186
go 187<189
go 185<167
go 184<2
go 183<195
go 182<0
go 181<173
go 180<176
go 179<171
go 178<174
go 177<181
go 177<173
go 175<179
go 175<171
go 172<180
go 172<176
go 170<178
go 170<174
go 3<185
go 1<183
other
fold go
eq
fold go
go 208<200
go 207<205
go 207<203
go 206<202
go 205<203
go 204<206
go 204<202
go 202<208
go 201<184
go 200<196
go 197<201
go 194<192
go 193<188
go 192<190
go 191<193
go 189<182
go 188<186
go 187<189
go 185<167
go 184<2
go 183<195
go 182<0
go 181<173
go 180<176
go 179<171
go 178<174
go 177<181
go 177<173
go 175<179
go 175<171
go 172<180
go 172<176
go 170<178
go 170<174
go 3<185
go 1<183
go 208<200
go 208<196
go 207<205
go 207<203
go 206<208
go 206<202
go 206<200
go 206<196
go 205<203
go 204<208
go 204<206
go 204<202
go 204<200
go 204<196
go 202<208
go 202<200
go 202<196
go 201<184
go 201<2
go 200<196
go 197<201
go 197<184
go 197<2
go 194<192
go 194<190
go 193<188
go 193<186
go 192<190
go 191<193
go 191<188
go 191<186
go 189<182
go 189<0
go 188<186
go 187<189
go 187<182
go 187<0
go 185<167
go 184<2
go 183<195
go 182<0
go 181<173
go 180<176
go 179<171
go 178<174
go 177<181
go 177<173
go 175<179
go 175<171
go 172<180
go 172<176
go 170<178
go 170<174
go 3<185
go 3<167
go 1<195
go 1<183
quant
trans
eq
fold go
go 250<242
go 249<247
go 249<245
go 248<244
go 247<245
go 246<248
go 246<244
go 244<250
go 243<226
go 242<238
go 239<243
go 236<234
go 235<230
go 234<232
go 233<235
go 231<224
go 230<228
go 229<231
go 227<209
go 226<2
go 225<237
go 224<0
go 223<215
go 222<218
go 221<213
go 220<216
go 219<223
go 219<215
go 217<221
go 217<213
go 214<222
go 214<218
go 212<220
go 212<216
go 3<227
go 1<225
other
fold go
eq
fold go
go 250<242
go 249<247
go 249<245
go 248<244
go 247<245
go 246<248
go 246<244
go 244<250
go 243<226
go 242<238
go 239<243
go 236<234
go 235<230
go 234<232
go 233<235
go 231<224
go 230<228
go 229<231
go 227<209
go 226<2
go 225<237
go 224<0
go 223<215
go 222<218
go 221<213
go 220<216
go 219<223
go 219<215
go 217<221
go 217<213
go 214<222
go 214<218
go 212<220
go 212<216
go 3<227
go 1<225
go 250<242
go 250<238
go 249<247
go 249<245
go 248<250
go 248<244
go 248<242
go 248<238
go 247<245
go 246<250
go 246<248
go 246<244
go 246<242
go 246<238
go 244<250
go 244<242
go 244<238
go 243<226
go 243<2
go 242<238
go 239<243
go 239<226
go 239<2
go 236<234
go 236<232
go 235<230
go 235<228
go 234<232
go 233<235
go 233<230
go 233<228
go 231<224
go 231<0
go 230<228
go 229<231
go 229<224
go 229<0
go 227<209
go 226<2
go 225<237
go 224<0
go 223<215
go 222<218
go 221<213
go 220<216
go 219<223
go 219<215
go 217<221
go 217<213
go 214<222
go 214<218
go 212<220
go 212<216
go 3<227
go 3<209
go 1<237
go 1<225
quant
trans
eq
fold go
go 335<328
go 334<332
go 333<327
go 332<330
go 331<333
go 329<320
go 328<324
go 327<323
go 325<329
go 322<319
go 321<313
go 320<316
go 319<315
go 317<321
go 314<263
go 313<309
go 310<314
go 308<322
go 307<261
go 306<298
go 306<296
go 305<303
go 305<301
go 304<306
go 304<300
go 304<298
go 304<296
go 303<301
go 302<306
go 302<304
go 302<300
go 302<298
go 302<296
go 300<306
go 300<298
go 300<296
go 299<284
go 299<267
go 298<296
go 297<299
go 297<284
go 297<267
go 294<292
go 294<290
go 293<288
go 293<286
go 292<290
go 291<293
go 291<288
go 291<286
go 289<282
go 289<265
go 288<286
go 287<289
go 287<282
go 287<265
go 285<269
go 284<267
go 283<295
go 282<265
go 281<273
go 280<276
go 279<271
go 278<274
go 277<281
go 277<273
go 275<279
go 275<271
go 272<280
go 272<276
go 270<278
go 270<274
go 269<307
go 268<285
go 268<269
go 266<295
go 266<283
go 264<252
go 263<256
go 262<308
go 261<254
go 257<264
go 255<262
go 253<335
go 251<253
other
fold go
eq
fold go
go 335<328
go 334<332
go 333<327
go 332<330
go 331<333
go 329<320
go 328<324
go 327<323
go 325<329
go 322<319
go 321<313
go 320<316
go 319<315
go 317<321
go 314<263
go 313<309
go 310<314
go 308<322
go 307<261
go 306<298
go 306<296
go 305<303
go 305<301
go 304<306
go 304<300
go 304<298
go 304<296
go 303<301
go 302<306
go 302<304
go 302<300
go 302<298
go 302<296
go 300<306
go 300<298
go 300<296
go 299<284
go 299<267
go 298<296
go 297<299
go 297<284
go 297<267
go 294<292
go 294<290
go 293<288
go 293<286
go 292<290
go 291<293
go 291<288
go 291<286
go 289<282
go 289<265
go 288<286
go 287<289
go 287<282
go 287<265
go 285<269
go 284<267
go 283<295
go 282<265
go 281<273
go 280<276
go 279<271
go 278<274
go 277<281
go 277<273
go 275<279
go 275<271
go 272<280
go 272<276
go 270<278
go 270<274
go 269<307
go 268<285
go 268<269
go 266<295
go 266<283
go 264<252
go 263<256
go 262<308
go 261<254
go 257<264
go 255<262
go 253<335
go 251<253
go 335<328
go 335<324
go 334<332
go 334<330
go 333<327
go 333<323
go 332<330
go 331<333
go 331<327
go 331<323
go 329<320
go 329<316
go 328<324
go 327<323
go 325<329
go 325<320
go 325<316
go 322<319
go 322<315
go 321<313
go 321<309
go 320<316
go 319<315
go 317<321
go 317<313
go 317<309
go 314<263
go 314<256
go 313<309
go 310<314
go 310<263
go 310<256
go 308<322
go 308<319
go 308<315
go 307<261
go 307<254
go 306<298
go 306<296
go 305<303
go 305<301
go 304<306
go 304<300
go 304<298
go 304<296
go 303<301
go 302<306
go 302<304
go 302<300
go 302<298
go 302<296
go 300<306
go 300<298
go 300<296
go 299<284
go 299<267
go 298<296
go 297<299
go 297<284
go 297<267
go 294<292
go 294<290
go 293<288
go 293<286
go 292<290
go 291<293
go 291<288
go 291<286
go 289<282
go 289<265
go 288<286
go 287<289
go 287<282
go 287<265
go 285<307
go 285<269
go 285<261
go 285<254
go 284<267
go 283<295
go 282<265
go 281<273
go 280<276
go 279<271
go 278<274
go 277<281
go 277<273
go 275<279
go 275<271
go 272<280
go 272<276
go 270<278
go 270<274
go 269<307
go 269<261
go 269<254
go 268<307
go 268<285
go 268<269
go 268<261
go 266<295
go 266<283
go 264<252
go 263<256
go 262<322
go 262<319
go 262<308
go 261<254
go 257<264
go 257<252
go 255<322
go 255<319
go 255<308
go 255<262
go 253<335
go 253<328
go 253<324
go 251<335
go 251<328
go 251<253
other
fold go
eq
fold go
go 335<328
go 335<324
go 334<332
go 334<330
go 333<327
go 333<323
go 332<330
go 331<333
go 331<327
go 331<323
go 329<320
go 329<316
go 328<324
go 327<323
go 325<329
go 325<320
go 325<316
go 322<319
go 322<315
go 321<313
go 321<309
go 320<316
go 319<315
go 317<321
go 317<313
go 317<309
go 314<263
go 314<256
go 313<309
go 310<314
go 310<263
go 310<256
go 308<322
go 308<319
go 308<315
go 307<261
go 307<254
go 306<298
go 306<296
go 305<303
go 305<301
go 304<306
go 304<300
go 304<298
go 304<296
go 303<301
go 302<306
go 302<304
go 302<300
go 302<298
go 302<296
go 300<306
go 300<298
go 300<296
go 299<284
go 299<267
go 298<296
go 297<299
go 297<284
go 297<267
go 294<292
go 294<290
go 293<288
go 293<286
go 292<290
go 291<293
go 291<288
go 291<286
go 289<282
go 289<265
go 288<286
go 287<289
go 287<282
go 287<265
go 285<307
go 285<269
go 285<261
go 285<254
go 284<267
go 283<295
go 282<265
go 281<273
go 280<276
go 279<271
go 278<274
go 277<281
go 277<273
go 275<279
go 275<271
go 272<280
go 272<276
go 270<278
go 270<274
go 269<307
go 269<261
go 269<254
go 268<307
go 268<285
go 268<269
go 268<261
go 266<295
go 266<283
go 264<252
go 263<256
go 262<322
go 262<319
go 262<308
go 261<254
go 257<264
go 257<252
go 255<322
go 255<319
go 255<308
go 255<262
go 253<335
go 253<328
go 253<324
go 251<335
go 251<328
go 251<253
go 335<328
go 335<324
go 334<332
go 334<330
go 333<327
go 333<323
go 332<330
go 331<333
go 331<327
go 331<323
go 329<320
go 329<316
go 328<324
go 327<323
go 325<329
go 325<320
go 325<316
go 322<319
go 322<315
go 321<313
go 321<309
go 320<316
go 319<315
go 317<321
go 317<313
go 317<309
go 314<263
go 314<256
go 313<309
go 310<314
go 310<263
go 310<256
go 308<322
go 308<319
go 308<315
go 307<261
go 307<254
go 306<298
go 306<296
go 305<303
go 305<301
go 304<306
go 304<300
go 304<298
go 304<296
go 303<301
go 302<306
go 302<304
go 302<300
go 302<298
go 302<296
go 300<306
go 300<298
go 300<296
go 299<284
go 299<267
go 298<296
go 297<299
go 297<284
go 297<267
go 294<292
go 294<290
go 293<288
go 293<286
go 292<290
go 291<293
go 291<288
go 291<286
go 289<282
go 289<265
go 288<286
go 287<289
go 287<282
go 287<265
go 285<307
go 285<269
go 285<261
go 285<254
go 284<267
go 283<295
go 282<265
go 281<273
go 280<276
go 279<271
go 278<274
go 277<281
go 277<273
go 275<279
go 275<271
go 272<280
go 272<276
go 270<278
go 270<274
go 269<307
go 269<261
go 269<254
go 268<307
go 268<285
go 268<269
go 268<261
go 268<254
go 266<295
go 266<283
go 264<252
go 263<256
go 262<322
go 262<319
go 262<315
go 262<308
go 261<254
go 257<264
go 257<252
go 255<322
go 255<319
go 255<315
go 255<308
go 255<262
go 253<335
go 253<328
go 253<324
go 251<335
go 251<328
go 251<324
go 251<253
quant
trans
eq
fold go
go 377<369
go 376<374
go 376<372
go 375<371
go 374<372
go 373<375
go 373<371
go 371<377
go 370<353
go 369<365
go 366<370
go 363<361
go 362<357
go 361<359
go 360<362
go 358<351
go 357<355
go 356<358
go 354<336
go 353<2
go 352<364
go 351<0
go 350<342
go 349<345
go 348<340
go 347<343
go 346<350
go 346<342
go 344<348
go 344<340
go 341<349
go 341<345
go 339<347
go 339<343
go 3<354
go 1<352
other
fold go
eq
fold go
go 377<369
go 376<374
go 376<372
go 375<371
go 374<372
go 373<375
go 373<371
go 371<377
go 370<353
go 369<365
go 366<370
go 363<361
go 362<357
go 361<359
go 360<362
go 358<351
go 357<355
go 356<358
go 354<336
go 353<2
go 352<364
go 351<0
go 350<342
go 349<345
go 348<340
go 347<343
go 346<350
go 346<342
go 344<348
go 344<340
go 341<349
go 341<345
go 339<347
go 339<343
go 3<354
go 1<352
go 377<369
go 377<365
go 376<374
go 376<372
go 375<377
go 375<371
go 375<369
go 375<365
go 374<372
go 373<377
go 373<375
go 373<371
go 373<369
go 373<365
go 371<377
go 371<369
go 371<365
go 370<353
go 370<2
go 369<365
go 366<370
go 366<353
go 366<2
go 363<361
go 363<359
go 362<357
go 362<355
go 361<359
go 360<362
go 360<357
go 360<355
go 358<351
go 358<0
go 357<355
go 356<358
go 356<351
go 356<0
go 354<336
go 353<2
go 352<364
go 351<0
go 350<342
go 349<345
go 348<340
go 347<343
go 346<350
go 346<342
go 344<348
go 344<340
go 341<349
go 341<345
go 339<347
go 339<343
go 3<354
go 3<336
go 1<364
go 1<352
quant
trans
eq
fold go
go 419<411
go 418<416
go 418<414
go 417<413
go 416<414
go 415<417
go 415<413
go 413<419
go 412<395
go 411<407
go 408<412
go 405<403
go 404<399
go 403<401
go 402<404
go 400<393
go 399<397
go 398<400
go 396<378
go 395<2
go 394<406
go 393<0
go 392<384
go 391<387
go 390<382
go 389<385
go 388<392
go 388<384
go 386<390
go 386<382
go 383<391
go 383<387
go 381<389
go 381<385
go 3<396
go 1<394
other
fold go
eq
fold go
go 419<411
go 418<416
go 418<414
go 417<413
go 416<414
go 415<417
go 415<413
go 413<419
go 412<395
go 411<407
go 408<412
go 405<403
go 404<399
go 403<401
go 402<404
go 400<393
go 399<397
go 398<400
go 396<378
go 395<2
go 394<406
go 393<0
go 392<384
go 391<387
go 390<382
go 389<385
go 388<392
go 388<384
go 386<390
go 386<382
go 383<391
go 383<387
go 381<389
go 381<385
go 3<396
go 1<394
go 419<411
go 419<407
go 418<416
go 418<414
go 417<419
go 417<413
go 417<411
go 417<407
go 416<414
go 415<419
go 415<417
go 415<413
go 415<411
go 415<407
go 413<419
go 413<411
go 413<407
go 412<395
go 412<2
go 411<407
go 408<412
go 408<395
go 408<2
go 405<403
go 405<401
go 404<399
go 404<397
go 403<401
go 402<404
go 402<399
go 402<397
go 400<393
go 400<0
go 399<397
go 398<400
go 398<393
go 398<0
go 396<378
go 395<2
go 394<406
go 393<0
go 392<384
go 391<387
go 390<382
go 389<385
go 388<392
go 388<384
go 386<390
go 386<382
go 383<391
go 383<387
go 381<389
go 381<385
go 3<396
go 3<378
go 1<406
go 1<394

catchIO :: forall a. forall 0
                            1
                            2
                            3
                            4
                            5
                            6
                            7
                            9
                            10
                            11
                            12. (0IO -> ((1IOException -> 2IO) -> 3IO))
              where
                 [(0<4, [Just []]), (0<9, [Just []]), (2<6, [Just []]),
                  (2<11, [Just []]), (5<1, [Just []]), (5<10, [Just []]),
                  (7<3, [Just []]), (7<12, [Just []]), (9<4, [Just []]),
                  (10<1, [Just []]), (11<6, [Just []]), (12<3, [Just []])]


version :: forall 13
                  14
                  15
                  16
                  17
                  18
                  19
                  20
                  21
                  22
                  23
                  24
                  25
                  26
                  27
                  28
                  29
                  30
                  31
                  32
                  33
                  34
                  35
                  36
                  37. 13Version
              where
                 [(16<14, [Just []]), (16<18, [Just []]), (17<14, [Just []]),
                  (17<18, [Just []]), (18<14, [Just []]), (20<19, [Just []]),
                  (21<14, [Just []]), (21<17, [Just []]), (21<18, [Just []]),
                  (21<23, [Just []]), (22<14, [Just []]), (22<17, [Just []]),
                  (22<18, [Just []]), (22<23, [Just []]), (23<14, [Just []]),
                  (23<17, [Just []]), (23<18, [Just []]), (25<24, [Just []]),
                  (26<14, [Just []]), (26<17, [Just []]), (26<18, [Just []]),
                  (26<22, [Just []]), (26<23, [Just []]), (26<28, [Just []]),
                  (27<14, [Just []]), (27<17, [Just []]), (27<18, [Just []]),
                  (27<22, [Just []]), (27<23, [Just []]), (27<28, [Just []]),
                  (28<14, [Just []]), (28<17, [Just []]), (28<18, [Just []]),
                  (28<22, [Just []]), (28<23, [Just []]), (30<29, [Just []]),
                  (31<14, [Just []]), (31<17, [Just []]), (31<18, [Just []]),
                  (31<22, [Just []]), (31<23, [Just []]), (31<27, [Just []]),
                  (31<28, [Just []]), (31<33, [Just []]), (32<14, [Just []]),
                  (32<17, [Just []]), (32<18, [Just []]), (32<22, [Just []]),
                  (32<23, [Just []]), (32<27, [Just []]), (32<28, [Just []]),
                  (32<33, [Just []]), (33<14, [Just []]), (33<17, [Just []]),
                  (33<18, [Just []]), (33<22, [Just []]), (33<23, [Just []]),
                  (33<27, [Just []]), (33<28, [Just []]), (35<34, [Just []]),
                  (36<14, [Just []]), (36<17, [Just []]), (36<18, [Just []]),
                  (36<22, [Just []]), (36<23, [Just []]), (36<27, [Just []]),
                  (36<28, [Just []]), (36<32, [Just []]), (36<33, [Just []]),
                  (37<15, [Just []]), (:<14[], [Just []]), (:<17[], [Just []]),
                  (:<18[], [Just []]), (:<22[], [Just []]), (:<23[], [Just []]),
                  (:<27[], [Just []]), (:<28[], [Just []]), (:<33[], [Just []]),
                  ([]<14[], [Just []]), ([]<15[], [Just []]), ([]<17[], [Just []]),
                  ([]<18[], [Just []]), ([]<22[], [Just []]), ([]<23[], [Just []]),
                  ([]<27[], [Just []]), ([]<28[], [Just []]), ([]<32[], [Just []]),
                  ([]<33[], [Just []]), ([]<36[], [Just []]), ([]<37[], [Just []])]


bindir :: forall 38 39 40 41 42 43. 38[]
             where
                [(40<38, [Just []]), (40<42, [Just []]), (41<39, [Just []]),
                 (42<38, [Just []]), (43<39, [Just []]), (43<41, [Just []])]


libdir :: forall 44 45 46 47 48 49. 44[]
             where
                [(46<44, [Just []]), (46<48, [Just []]), (47<45, [Just []]),
                 (48<44, [Just []]), (49<45, [Just []]), (49<47, [Just []])]


dynlibdir :: forall 50 51 52 53 54 55. 50[]
                where
                   [(52<50, [Just []]), (52<54, [Just []]), (53<51, [Just []]),
                    (54<50, [Just []]), (55<51, [Just []]), (55<53, [Just []])]


datadir :: forall 56 57 58 59 60 61. 56[]
              where
                 [(58<56, [Just []]), (58<60, [Just []]), (59<57, [Just []]),
                  (60<56, [Just []]), (61<57, [Just []]), (61<59, [Just []])]


libexecdir :: forall 62 63 64 65 66 67. 62[]
                 where
                    [(64<62, [Just []]), (64<66, [Just []]), (65<63, [Just []]),
                     (66<62, [Just []]), (67<63, [Just []]), (67<65, [Just []])]


sysconfdir :: forall 68 69 70 71 72 73. 68[]
                 where
                    [(70<68, [Just []]), (70<72, [Just []]), (71<69, [Just []]),
                     (72<68, [Just []]), (73<69, [Just []]), (73<71, [Just []])]


$trModule :: forall 74 75 76 77 78 79 80 81 82. 74Module
                where
                   [(77<75, [Just []]), (77<78, [Just []]), (78<75, [Just []]),
                    (79<75, [Just []]), (79<77, [Just []]), (79<78, [Just []]),
                    (80<76, [Just []]), (80<81, [Just []]), (81<76, [Just []]),
                    (82<76, [Just []]), (82<80, [Just []]), (82<81, [Just []]),
                    (TrNameS<75TrName, [Just []]), (TrNameS<76TrName, [Just []]),
                    (TrNameS<78TrName, [Just []]), (TrNameS<81TrName, [Just []])]


getBinDir :: forall 0
                    1
                    2
                    3
                    83
                    86
                    87
                    88
                    89
                    90
                    91
                    92
                    93
                    94
                    95
                    96
                    97
                    98
                    99
                    100
                    101
                    102
                    103
                    104
                    105
                    106
                    107
                    108
                    109
                    110
                    111
                    112
                    113
                    116
                    117
                    118
                    119
                    120
                    121
                    122
                    123
                    124. 83IO
                where
                   [(1<99, [Just []]), (1<111, [Just []]), (3<83, [Just []]),
                    (3<101, [Just []]), (86<90, [Just []]), (86<94, [Just []]),
                    (88<92, [Just []]), (88<96, [Just []]), (91<87, [Just []]),
                    (91<95, [Just []]), (93<89, [Just []]), (93<97, [Just []]),
                    (94<90, [Just []]), (95<87, [Just []]), (96<92, [Just []]),
                    (97<89, [Just []]), (98<0, [Just []]), (99<111, [Just []]),
                    (100<2, [Just []]), (101<83, [Just []]), (103<0, [Just []]),
                    (103<98, [Just []]), (103<105, [Just []]), (104<102, [Just []]),
                    (105<0, [Just []]), (105<98, [Just []]), (107<102, [Just []]),
                    (107<104, [Just []]), (107<109, [Just []]), (108<106, [Just []]),
                    (109<102, [Just []]), (109<104, [Just []]), (110<106, [Just []]),
                    (110<108, [Just []]), (113<2, [Just []]), (113<100, [Just []]),
                    (113<117, [Just []]), (116<112, [Just []]), (117<2, [Just []]),
                    (117<100, [Just []]), (118<112, [Just []]), (118<116, [Just []]),
                    (118<124, [Just []]), (120<112, [Just []]), (120<116, [Just []]),
                    (120<118, [Just []]), (120<122, [Just []]), (120<124, [Just []]),
                    (121<119, [Just []]), (122<112, [Just []]), (122<116, [Just []]),
                    (122<118, [Just []]), (122<124, [Just []]), (123<119, [Just []]),
                    (123<121, [Just []]), (124<112, [Just []]), (124<116, [Just []])]


getLibDir :: forall 0
                    1
                    2
                    3
                    125
                    128
                    129
                    130
                    131
                    132
                    133
                    134
                    135
                    136
                    137
                    138
                    139
                    140
                    141
                    142
                    143
                    144
                    145
                    146
                    147
                    148
                    149
                    150
                    151
                    152
                    153
                    154
                    155
                    158
                    159
                    160
                    161
                    162
                    163
                    164
                    165
                    166. 125IO
                where
                   [(1<141, [Just []]), (1<153, [Just []]), (3<125, [Just []]),
                    (3<143, [Just []]), (128<132, [Just []]), (128<136, [Just []]),
                    (130<134, [Just []]), (130<138, [Just []]), (133<129, [Just []]),
                    (133<137, [Just []]), (135<131, [Just []]), (135<139, [Just []]),
                    (136<132, [Just []]), (137<129, [Just []]), (138<134, [Just []]),
                    (139<131, [Just []]), (140<0, [Just []]), (141<153, [Just []]),
                    (142<2, [Just []]), (143<125, [Just []]), (145<0, [Just []]),
                    (145<140, [Just []]), (145<147, [Just []]), (146<144, [Just []]),
                    (147<0, [Just []]), (147<140, [Just []]), (149<144, [Just []]),
                    (149<146, [Just []]), (149<151, [Just []]), (150<148, [Just []]),
                    (151<144, [Just []]), (151<146, [Just []]), (152<148, [Just []]),
                    (152<150, [Just []]), (155<2, [Just []]), (155<142, [Just []]),
                    (155<159, [Just []]), (158<154, [Just []]), (159<2, [Just []]),
                    (159<142, [Just []]), (160<154, [Just []]), (160<158, [Just []]),
                    (160<166, [Just []]), (162<154, [Just []]), (162<158, [Just []]),
                    (162<160, [Just []]), (162<164, [Just []]), (162<166, [Just []]),
                    (163<161, [Just []]), (164<154, [Just []]), (164<158, [Just []]),
                    (164<160, [Just []]), (164<166, [Just []]), (165<161, [Just []]),
                    (165<163, [Just []]), (166<154, [Just []]), (166<158, [Just []])]


getDynLibDir :: forall 0
                       1
                       2
                       3
                       167
                       170
                       171
                       172
                       173
                       174
                       175
                       176
                       177
                       178
                       179
                       180
                       181
                       182
                       183
                       184
                       185
                       186
                       187
                       188
                       189
                       190
                       191
                       192
                       193
                       194
                       195
                       196
                       197
                       200
                       201
                       202
                       203
                       204
                       205
                       206
                       207
                       208. 167IO
                   where
                      [(1<183, [Just []]), (1<195, [Just []]), (3<167, [Just []]),
                       (3<185, [Just []]), (170<174, [Just []]), (170<178, [Just []]),
                       (172<176, [Just []]), (172<180, [Just []]), (175<171, [Just []]),
                       (175<179, [Just []]), (177<173, [Just []]), (177<181, [Just []]),
                       (178<174, [Just []]), (179<171, [Just []]), (180<176, [Just []]),
                       (181<173, [Just []]), (182<0, [Just []]), (183<195, [Just []]),
                       (184<2, [Just []]), (185<167, [Just []]), (187<0, [Just []]),
                       (187<182, [Just []]), (187<189, [Just []]), (188<186, [Just []]),
                       (189<0, [Just []]), (189<182, [Just []]), (191<186, [Just []]),
                       (191<188, [Just []]), (191<193, [Just []]), (192<190, [Just []]),
                       (193<186, [Just []]), (193<188, [Just []]), (194<190, [Just []]),
                       (194<192, [Just []]), (197<2, [Just []]), (197<184, [Just []]),
                       (197<201, [Just []]), (200<196, [Just []]), (201<2, [Just []]),
                       (201<184, [Just []]), (202<196, [Just []]), (202<200, [Just []]),
                       (202<208, [Just []]), (204<196, [Just []]), (204<200, [Just []]),
                       (204<202, [Just []]), (204<206, [Just []]), (204<208, [Just []]),
                       (205<203, [Just []]), (206<196, [Just []]), (206<200, [Just []]),
                       (206<202, [Just []]), (206<208, [Just []]), (207<203, [Just []]),
                       (207<205, [Just []]), (208<196, [Just []]), (208<200, [Just []])]


getDataDir :: forall 0
                     1
                     2
                     3
                     209
                     212
                     213
                     214
                     215
                     216
                     217
                     218
                     219
                     220
                     221
                     222
                     223
                     224
                     225
                     226
                     227
                     228
                     229
                     230
                     231
                     232
                     233
                     234
                     235
                     236
                     237
                     238
                     239
                     242
                     243
                     244
                     245
                     246
                     247
                     248
                     249
                     250. 209IO
                 where
                    [(1<225, [Just []]), (1<237, [Just []]), (3<209, [Just []]),
                     (3<227, [Just []]), (212<216, [Just []]), (212<220, [Just []]),
                     (214<218, [Just []]), (214<222, [Just []]), (217<213, [Just []]),
                     (217<221, [Just []]), (219<215, [Just []]), (219<223, [Just []]),
                     (220<216, [Just []]), (221<213, [Just []]), (222<218, [Just []]),
                     (223<215, [Just []]), (224<0, [Just []]), (225<237, [Just []]),
                     (226<2, [Just []]), (227<209, [Just []]), (229<0, [Just []]),
                     (229<224, [Just []]), (229<231, [Just []]), (230<228, [Just []]),
                     (231<0, [Just []]), (231<224, [Just []]), (233<228, [Just []]),
                     (233<230, [Just []]), (233<235, [Just []]), (234<232, [Just []]),
                     (235<228, [Just []]), (235<230, [Just []]), (236<232, [Just []]),
                     (236<234, [Just []]), (239<2, [Just []]), (239<226, [Just []]),
                     (239<243, [Just []]), (242<238, [Just []]), (243<2, [Just []]),
                     (243<226, [Just []]), (244<238, [Just []]), (244<242, [Just []]),
                     (244<250, [Just []]), (246<238, [Just []]), (246<242, [Just []]),
                     (246<244, [Just []]), (246<248, [Just []]), (246<250, [Just []]),
                     (247<245, [Just []]), (248<238, [Just []]), (248<242, [Just []]),
                     (248<244, [Just []]), (248<250, [Just []]), (249<245, [Just []]),
                     (249<247, [Just []]), (250<238, [Just []]), (250<242, [Just []])]


getDataFileName :: forall 251
                          252
                          253
                          254
                          255
                          256
                          257
                          261
                          262
                          263
                          264
                          265
                          266
                          267
                          268
                          269
                          270
                          271
                          272
                          273
                          274
                          275
                          276
                          277
                          278
                          279
                          280
                          281
                          282
                          283
                          284
                          285
                          286
                          287
                          288
                          289
                          290
                          291
                          292
                          293
                          294
                          295
                          296
                          297
                          298
                          299
                          300
                          301
                          302
                          303
                          304
                          305
                          306
                          307
                          308
                          309
                          310
                          313
                          314
                          315
                          316
                          317
                          319
                          320
                          321
                          322
                          323
                          324
                          325
                          327
                          328
                          329
                          330
                          331
                          332
                          333
                          334
                          335. (251[] -> 252IO)
                      where
                         [(251<253, [Just []]), (251<324, [Just []]), (251<328, [Just []]),
                          (251<335, [Just []]), (253<324, [Just []]), (253<328, [Just []]),
                          (253<335, [Just []]), (255<262, [Just []]), (255<308, [Just []]),
                          (255<315, [Just []]), (255<319, [Just []]), (255<322, [Just []]),
                          (257<252, [Just []]), (257<264, [Just []]), (261<254, [Just []]),
                          (262<308, [Just []]), (262<315, [Just []]), (262<319, [Just []]),
                          (262<322, [Just []]), (263<256, [Just []]), (264<252, [Just []]),
                          (266<283, [Just []]), (266<295, [Just []]), (268<254, [Just []]),
                          (268<261, [Just []]), (268<269, [Just []]), (268<285, [Just []]),
                          (268<307, [Just []]), (269<254, [Just []]), (269<261, [Just []]),
                          (269<307, [Just []]), (270<274, [Just []]), (270<278, [Just []]),
                          (272<276, [Just []]), (272<280, [Just []]), (275<271, [Just []]),
                          (275<279, [Just []]), (277<273, [Just []]), (277<281, [Just []]),
                          (278<274, [Just []]), (279<271, [Just []]), (280<276, [Just []]),
                          (281<273, [Just []]), (282<265, [Just []]), (283<295, [Just []]),
                          (284<267, [Just []]), (285<254, [Just []]), (285<261, [Just []]),
                          (285<269, [Just []]), (285<307, [Just []]), (287<265, [Just []]),
                          (287<282, [Just []]), (287<289, [Just []]), (288<286, [Just []]),
                          (289<265, [Just []]), (289<282, [Just []]), (291<286, [Just []]),
                          (291<288, [Just []]), (291<293, [Just []]), (292<290, [Just []]),
                          (293<286, [Just []]), (293<288, [Just []]), (294<290, [Just []]),
                          (294<292, [Just []]), (297<267, [Just []]), (297<284, [Just []]),
                          (297<299, [Just []]), (298<296, [Just []]), (299<267, [Just []]),
                          (299<284, [Just []]), (300<296, [Just []]), (300<298, [Just []]),
                          (300<306, [Just []]), (302<296, [Just []]), (302<298, [Just []]),
                          (302<300, [Just []]), (302<304, [Just []]), (302<306, [Just []]),
                          (303<301, [Just []]), (304<296, [Just []]), (304<298, [Just []]),
                          (304<300, [Just []]), (304<306, [Just []]), (305<301, [Just []]),
                          (305<303, [Just []]), (306<296, [Just []]), (306<298, [Just []]),
                          (307<254, [Just []]), (307<261, [Just []]), (308<315, [Just []]),
                          (308<319, [Just []]), (308<322, [Just []]), (310<256, [Just []]),
                          (310<263, [Just []]), (310<314, [Just []]), (313<309, [Just []]),
                          (314<256, [Just []]), (314<263, [Just []]), (317<309, [Just []]),
                          (317<313, [Just []]), (317<321, [Just []]), (319<315, [Just []]),
                          (320<316, [Just []]), (321<309, [Just []]), (321<313, [Just []]),
                          (322<315, [Just []]), (322<319, [Just []]), (325<316, [Just []]),
                          (325<320, [Just []]), (325<329, [Just []]), (327<323, [Just []]),
                          (328<324, [Just []]), (329<316, [Just []]), (329<320, [Just []]),
                          (331<323, [Just []]), (331<327, [Just []]), (331<333, [Just []]),
                          (332<330, [Just []]), (333<323, [Just []]), (333<327, [Just []]),
                          (334<330, [Just []]), (334<332, [Just []]), (335<324, [Just []]),
                          (335<328, [Just []])]


getLibexecDir :: forall 0
                        1
                        2
                        3
                        336
                        339
                        340
                        341
                        342
                        343
                        344
                        345
                        346
                        347
                        348
                        349
                        350
                        351
                        352
                        353
                        354
                        355
                        356
                        357
                        358
                        359
                        360
                        361
                        362
                        363
                        364
                        365
                        366
                        369
                        370
                        371
                        372
                        373
                        374
                        375
                        376
                        377. 336IO
                    where
                       [(1<352, [Just []]), (1<364, [Just []]), (3<336, [Just []]),
                        (3<354, [Just []]), (339<343, [Just []]), (339<347, [Just []]),
                        (341<345, [Just []]), (341<349, [Just []]), (344<340, [Just []]),
                        (344<348, [Just []]), (346<342, [Just []]), (346<350, [Just []]),
                        (347<343, [Just []]), (348<340, [Just []]), (349<345, [Just []]),
                        (350<342, [Just []]), (351<0, [Just []]), (352<364, [Just []]),
                        (353<2, [Just []]), (354<336, [Just []]), (356<0, [Just []]),
                        (356<351, [Just []]), (356<358, [Just []]), (357<355, [Just []]),
                        (358<0, [Just []]), (358<351, [Just []]), (360<355, [Just []]),
                        (360<357, [Just []]), (360<362, [Just []]), (361<359, [Just []]),
                        (362<355, [Just []]), (362<357, [Just []]), (363<359, [Just []]),
                        (363<361, [Just []]), (366<2, [Just []]), (366<353, [Just []]),
                        (366<370, [Just []]), (369<365, [Just []]), (370<2, [Just []]),
                        (370<353, [Just []]), (371<365, [Just []]), (371<369, [Just []]),
                        (371<377, [Just []]), (373<365, [Just []]), (373<369, [Just []]),
                        (373<371, [Just []]), (373<375, [Just []]), (373<377, [Just []]),
                        (374<372, [Just []]), (375<365, [Just []]), (375<369, [Just []]),
                        (375<371, [Just []]), (375<377, [Just []]), (376<372, [Just []]),
                        (376<374, [Just []]), (377<365, [Just []]), (377<369, [Just []])]


getSysconfDir :: forall 0
                        1
                        2
                        3
                        378
                        381
                        382
                        383
                        384
                        385
                        386
                        387
                        388
                        389
                        390
                        391
                        392
                        393
                        394
                        395
                        396
                        397
                        398
                        399
                        400
                        401
                        402
                        403
                        404
                        405
                        406
                        407
                        408
                        411
                        412
                        413
                        414
                        415
                        416
                        417
                        418
                        419. 378IO
                    where
                       [(1<394, [Just []]), (1<406, [Just []]), (3<378, [Just []]),
                        (3<396, [Just []]), (381<385, [Just []]), (381<389, [Just []]),
                        (383<387, [Just []]), (383<391, [Just []]), (386<382, [Just []]),
                        (386<390, [Just []]), (388<384, [Just []]), (388<392, [Just []]),
                        (389<385, [Just []]), (390<382, [Just []]), (391<387, [Just []]),
                        (392<384, [Just []]), (393<0, [Just []]), (394<406, [Just []]),
                        (395<2, [Just []]), (396<378, [Just []]), (398<0, [Just []]),
                        (398<393, [Just []]), (398<400, [Just []]), (399<397, [Just []]),
                        (400<0, [Just []]), (400<393, [Just []]), (402<397, [Just []]),
                        (402<399, [Just []]), (402<404, [Just []]), (403<401, [Just []]),
                        (404<397, [Just []]), (404<399, [Just []]), (405<401, [Just []]),
                        (405<403, [Just []]), (408<2, [Just []]), (408<395, [Just []]),
                        (408<412, [Just []]), (411<407, [Just []]), (412<2, [Just []]),
                        (412<395, [Just []]), (413<407, [Just []]), (413<411, [Just []]),
                        (413<419, [Just []]), (415<407, [Just []]), (415<411, [Just []]),
                        (415<413, [Just []]), (415<417, [Just []]), (415<419, [Just []]),
                        (416<414, [Just []]), (417<407, [Just []]), (417<411, [Just []]),
                        (417<413, [Just []]), (417<419, [Just []]), (418<414, [Just []]),
                        (418<416, [Just []]), (419<407, [Just []]), (419<411, [Just []])]

[2 of 2] Compiling SimpleTest       ( test/SimpleTest.hs, /home/eddie/Documents/Intensional Constriants/prototype/dist-newstyle/build/x86_64-linux/ghc-8.6.5/intensional-constraints-0.1.0.0/t/intensional-constraints-test/build/intensional-constraints-test/intensional-constraints-test-tmp/SimpleTest.o ) [Plugin forced recompilation]
quant
trans
eq
fold go
go 17Nat<[Succ, Zero]
go 6Nat<[Succ, Zero]
go True<19Bool
go False<8Bool
go 25<23
go 24<16
go 23<0
go 20<25
go 19<16
go 18<17
go 16<3
go 15<17
go 14<12
go 13<5
go 12<2
go 9<14
go 8<5
go 7<6
go 5<1
go 4<6
go 3<13
go 2<15
go 1<24
go 0<4
other
fold go
eq
fold go
go 17Nat<[Succ, Zero]
go 6Nat<[Succ, Zero]
go True<19Bool
go False<8Bool
go 25<23
go 24<16
go 23<0
go 20<25
go 19<16
go 18<17
go 16<3
go 15<17
go 14<12
go 13<5
go 12<2
go 9<14
go 8<5
go 7<6
go 5<1
go 4<6
go 3<13
go 2<15
go 1<24
go 0<4
go 25Nat<[Succ, Zero]
go 23Nat<[Succ, Zero]
go 18Nat<[Succ, Zero]
go 17Nat<[Succ, Zero]
go 15Nat<[Succ, Zero]
go 14Nat<[Succ, Zero]
go 12Nat<[Succ, Zero]
go 7Nat<[Succ, Zero]
go 6Nat<[Succ, Zero]
go 4Nat<[Succ, Zero]
go 2Nat<[Succ, Zero]
go 0Nat<[Succ, Zero]
go True<19Bool
go True<16Bool
go True<13Bool
go True<5Bool
go True<3Bool
go True<1Bool
go False<24Bool
go False<16Bool
go False<8Bool
go False<5Bool
go False<3Bool
go False<1Bool
go 25<23
go 25<6
go 25<4
go 25<0
go 24<16
go 24<13
go 24<5
go 24<3
go 24<1
go 23<6
go 23<4
go 23<0
go 20<25
go 20<23
go 20<0
go 19<16
go 19<13
go 19<5
go 19<3
go 19<1
go 18<17
go 16<13
go 16<5
go 16<3
go 16<1
go 15<17
go 14<17
go 14<15
go 14<12
go 14<2
go 13<24
go 13<16
go 13<5
go 13<3
go 13<1
go 12<17
go 12<15
go 12<2
go 9<14
go 9<12
go 9<2
go 8<24
go 8<16
go 8<5
go 8<3
go 8<1
go 7<6
go 5<24
go 5<16
go 5<3
go 5<1
go 4<6
go 3<13
go 3<5
go 3<1
go 2<17
go 2<15
go 1<24
go 1<16
go 1<3
go 0<6
go 0<4
